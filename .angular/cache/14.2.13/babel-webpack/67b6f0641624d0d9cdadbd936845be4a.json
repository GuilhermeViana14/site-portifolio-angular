{"ast":null,"code":"import { Directive, ElementRef, EventEmitter, Input, NgModule, NgZone, Output } from '@angular/core';\nimport { fromEvent, of } from 'rxjs';\nimport { filter, map, mergeMap, tap, throttleTime } from 'rxjs/operators';\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/ngx-ins-utils.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @param {?} selector\r\n * @param {?} scrollWindow\r\n * @param {?} defaultElement\r\n * @param {?} fromRoot\r\n * @return {?}\r\n */\n\nimport * as Éµngcc0 from '@angular/core';\n\nfunction resolveContainerElement(selector, scrollWindow, defaultElement, fromRoot) {\n  /** @type {?} */\n  const hasWindow = window && !!window.document && window.document.documentElement;\n  /** @type {?} */\n\n  let container = hasWindow && scrollWindow ? window : defaultElement;\n\n  if (selector) {\n    /** @type {?} */\n    const containerIsString = selector && hasWindow && typeof selector === 'string';\n    container = containerIsString ? findElement(selector, defaultElement.nativeElement, fromRoot) : selector;\n\n    if (!container) {\n      throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n    }\n  }\n\n  return container;\n}\n/**\r\n * @param {?} selector\r\n * @param {?} customRoot\r\n * @param {?} fromRoot\r\n * @return {?}\r\n */\n\n\nfunction findElement(selector, customRoot, fromRoot) {\n  /** @type {?} */\n  const rootEl = fromRoot ? window.document : customRoot;\n  return rootEl.querySelector(selector);\n}\n/**\r\n * @param {?} prop\r\n * @return {?}\r\n */\n\n\nfunction inputPropChanged(prop) {\n  return prop && !prop.firstChange;\n}\n/**\r\n * @return {?}\r\n */\n\n\nfunction hasWindowDefined() {\n  return typeof window !== 'undefined';\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/axis-resolver.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/** @type {?} */\n\n\nconst VerticalProps = {\n  clientHeight: \"clientHeight\",\n  offsetHeight: \"offsetHeight\",\n  scrollHeight: \"scrollHeight\",\n  pageYOffset: \"pageYOffset\",\n  offsetTop: \"offsetTop\",\n  scrollTop: \"scrollTop\",\n  top: \"top\"\n};\n/** @type {?} */\n\nconst HorizontalProps = {\n  clientHeight: \"clientWidth\",\n  offsetHeight: \"offsetWidth\",\n  scrollHeight: \"scrollWidth\",\n  pageYOffset: \"pageXOffset\",\n  offsetTop: \"offsetLeft\",\n  scrollTop: \"scrollLeft\",\n  top: \"left\"\n};\n\nclass AxisResolver {\n  /**\r\n   * @param {?=} vertical\r\n   */\n  constructor(vertical = true) {\n    this.vertical = vertical;\n    this.propsMap = vertical ? VerticalProps : HorizontalProps;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  clientHeightKey() {\n    return this.propsMap.clientHeight;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  offsetHeightKey() {\n    return this.propsMap.offsetHeight;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  scrollHeightKey() {\n    return this.propsMap.scrollHeight;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  pageYOffsetKey() {\n    return this.propsMap.pageYOffset;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  offsetTopKey() {\n    return this.propsMap.offsetTop;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  scrollTopKey() {\n    return this.propsMap.scrollTop;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  topKey() {\n    return this.propsMap.top;\n  }\n\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/event-trigger.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @record\r\n */\n\n/**\r\n * @record\r\n */\n\n/**\r\n * @record\r\n */\n\n/**\r\n * @record\r\n */\n\n/**\r\n * @param {?} alwaysCallback\r\n * @param {?} shouldFireScrollEvent\r\n * @param {?} isTriggeredCurrentTotal\r\n * @return {?}\r\n */\n\n\nfunction shouldTriggerEvents(alwaysCallback, shouldFireScrollEvent, isTriggeredCurrentTotal) {\n  if (alwaysCallback && shouldFireScrollEvent) {\n    return true;\n  }\n\n  if (!isTriggeredCurrentTotal && shouldFireScrollEvent) {\n    return true;\n  }\n\n  return false;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/position-resolver.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @param {?} __0\r\n * @return {?}\r\n */\n\n\nfunction createResolver({\n  windowElement,\n  axis\n}) {\n  return createResolverWithContainer({\n    axis,\n    isWindow: isElementWindow(windowElement)\n  }, windowElement);\n}\n/**\r\n * @param {?} resolver\r\n * @param {?} windowElement\r\n * @return {?}\r\n */\n\n\nfunction createResolverWithContainer(resolver, windowElement) {\n  /** @type {?} */\n  const container = resolver.isWindow || windowElement && !windowElement.nativeElement ? windowElement : windowElement.nativeElement;\n  return Object.assign(Object.assign({}, resolver), {\n    container\n  });\n}\n/**\r\n * @param {?} windowElement\r\n * @return {?}\r\n */\n\n\nfunction isElementWindow(windowElement) {\n  /** @type {?} */\n  const isWindow = ['Window', 'global'].some(\n  /**\r\n  * @param {?} obj\r\n  * @return {?}\r\n  */\n  obj => Object.prototype.toString.call(windowElement).includes(obj));\n  return isWindow;\n}\n/**\r\n * @param {?} isContainerWindow\r\n * @param {?} windowElement\r\n * @return {?}\r\n */\n\n\nfunction getDocumentElement(isContainerWindow, windowElement) {\n  return isContainerWindow ? windowElement.document.documentElement : null;\n}\n/**\r\n * @param {?} element\r\n * @param {?} resolver\r\n * @return {?}\r\n */\n\n\nfunction calculatePoints(element, resolver) {\n  /** @type {?} */\n  const height = extractHeightForElement(resolver);\n  return resolver.isWindow ? calculatePointsForWindow(height, element, resolver) : calculatePointsForElement(height, element, resolver);\n}\n/**\r\n * @param {?} height\r\n * @param {?} element\r\n * @param {?} resolver\r\n * @return {?}\r\n */\n\n\nfunction calculatePointsForWindow(height, element, resolver) {\n  const {\n    axis,\n    container,\n    isWindow\n  } = resolver;\n  const {\n    offsetHeightKey,\n    clientHeightKey\n  } = extractHeightPropKeys(axis); // scrolled until now / current y point\n\n  /** @type {?} */\n\n  const scrolled = height + getElementPageYOffset(getDocumentElement(isWindow, container), axis, isWindow); // total height / most bottom y point\n\n  /** @type {?} */\n\n  const nativeElementHeight = getElementHeight(element.nativeElement, isWindow, offsetHeightKey, clientHeightKey);\n  /** @type {?} */\n\n  const totalToScroll = getElementOffsetTop(element.nativeElement, axis, isWindow) + nativeElementHeight;\n  return {\n    height,\n    scrolled,\n    totalToScroll,\n    isWindow\n  };\n}\n/**\r\n * @param {?} height\r\n * @param {?} element\r\n * @param {?} resolver\r\n * @return {?}\r\n */\n\n\nfunction calculatePointsForElement(height, element, resolver) {\n  const {\n    axis,\n    container\n  } = resolver; // perhaps use container.offsetTop instead of 'scrollTop'\n\n  /** @type {?} */\n\n  const scrolled = container[axis.scrollTopKey()];\n  /** @type {?} */\n\n  const totalToScroll = container[axis.scrollHeightKey()];\n  return {\n    height,\n    scrolled,\n    totalToScroll,\n    isWindow: false\n  };\n}\n/**\r\n * @param {?} axis\r\n * @return {?}\r\n */\n\n\nfunction extractHeightPropKeys(axis) {\n  return {\n    offsetHeightKey: axis.offsetHeightKey(),\n    clientHeightKey: axis.clientHeightKey()\n  };\n}\n/**\r\n * @param {?} __0\r\n * @return {?}\r\n */\n\n\nfunction extractHeightForElement({\n  container,\n  isWindow,\n  axis\n}) {\n  const {\n    offsetHeightKey,\n    clientHeightKey\n  } = extractHeightPropKeys(axis);\n  return getElementHeight(container, isWindow, offsetHeightKey, clientHeightKey);\n}\n/**\r\n * @param {?} elem\r\n * @param {?} isWindow\r\n * @param {?} offsetHeightKey\r\n * @param {?} clientHeightKey\r\n * @return {?}\r\n */\n\n\nfunction getElementHeight(elem, isWindow, offsetHeightKey, clientHeightKey) {\n  if (isNaN(elem[offsetHeightKey])) {\n    /** @type {?} */\n    const docElem = getDocumentElement(isWindow, elem);\n    return docElem ? docElem[clientHeightKey] : 0;\n  } else {\n    return elem[offsetHeightKey];\n  }\n}\n/**\r\n * @param {?} elem\r\n * @param {?} axis\r\n * @param {?} isWindow\r\n * @return {?}\r\n */\n\n\nfunction getElementOffsetTop(elem, axis, isWindow) {\n  /** @type {?} */\n  const topKey = axis.topKey(); // elem = elem.nativeElement;\n\n  if (!elem.getBoundingClientRect) {\n    // || elem.css('none')) {\n    return;\n  }\n\n  return elem.getBoundingClientRect()[topKey] + getElementPageYOffset(elem, axis, isWindow);\n}\n/**\r\n * @param {?} elem\r\n * @param {?} axis\r\n * @param {?} isWindow\r\n * @return {?}\r\n */\n\n\nfunction getElementPageYOffset(elem, axis, isWindow) {\n  /** @type {?} */\n  const pageYOffset = axis.pageYOffsetKey();\n  /** @type {?} */\n\n  const scrollTop = axis.scrollTopKey();\n  /** @type {?} */\n\n  const offsetTop = axis.offsetTopKey();\n\n  if (isNaN(window.pageYOffset)) {\n    return getDocumentElement(isWindow, elem)[scrollTop];\n  } else if (elem.ownerDocument) {\n    return elem.ownerDocument.defaultView[pageYOffset];\n  } else {\n    return elem[offsetTop];\n  }\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/scroll-resolver.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @param {?} container\r\n * @param {?} distance\r\n * @param {?} scrollingDown\r\n * @return {?}\r\n */\n\n\nfunction shouldFireScrollEvent(container, distance, scrollingDown) {\n  /** @type {?} */\n  let remaining;\n  /** @type {?} */\n\n  let containerBreakpoint;\n\n  if (container.totalToScroll <= 0) {\n    return false;\n  }\n  /** @type {?} */\n\n\n  const scrolledUntilNow = container.isWindow ? container.scrolled : container.height + container.scrolled;\n\n  if (scrollingDown) {\n    remaining = (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\n    containerBreakpoint = distance.down / 10;\n  } else {\n    /** @type {?} */\n    const totalHiddenContentHeight = container.scrolled + (container.totalToScroll - scrolledUntilNow);\n    remaining = container.scrolled / totalHiddenContentHeight;\n    containerBreakpoint = distance.up / 10;\n  }\n  /** @type {?} */\n\n\n  const shouldFireEvent = remaining <= containerBreakpoint;\n  return shouldFireEvent;\n}\n/**\r\n * @param {?} lastScrollPosition\r\n * @param {?} container\r\n * @return {?}\r\n */\n\n\nfunction isScrollingDownwards(lastScrollPosition, container) {\n  return lastScrollPosition < container.scrolled;\n}\n/**\r\n * @param {?} lastScrollPosition\r\n * @param {?} container\r\n * @param {?} distance\r\n * @return {?}\r\n */\n\n\nfunction getScrollStats(lastScrollPosition, container, distance) {\n  /** @type {?} */\n  const scrollDown = isScrollingDownwards(lastScrollPosition, container);\n  return {\n    fire: shouldFireScrollEvent(container, distance, scrollDown),\n    scrollDown\n  };\n}\n/**\r\n * @param {?} position\r\n * @param {?} scrollState\r\n * @return {?}\r\n */\n\n/**\r\n * @param {?} totalToScroll\r\n * @param {?} scrollState\r\n * @return {?}\r\n */\n\n/**\r\n * @param {?} scrollState\r\n * @return {?}\r\n */\n\n/**\r\n * @param {?} scroll\r\n * @param {?} scrollState\r\n * @param {?} triggered\r\n * @param {?} isScrollingDown\r\n * @return {?}\r\n */\n\n/**\r\n * @param {?} totalToScroll\r\n * @param {?} scrollState\r\n * @param {?} isScrollingDown\r\n * @return {?}\r\n */\n\n/**\r\n * @param {?} scrollState\r\n * @param {?} scrolledUntilNow\r\n * @param {?} totalToScroll\r\n * @return {?}\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/scroll-state.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nclass ScrollState {\n  /**\r\n   * @param {?} __0\r\n   */\n  constructor({\n    totalToScroll\n  }) {\n    this.lastScrollPosition = 0;\n    this.lastTotalToScroll = 0;\n    this.totalToScroll = 0;\n    this.triggered = {\n      down: 0,\n      up: 0\n    };\n    this.totalToScroll = totalToScroll;\n  }\n  /**\r\n   * @param {?} position\r\n   * @return {?}\r\n   */\n\n\n  updateScrollPosition(position) {\n    return this.lastScrollPosition = position;\n  }\n  /**\r\n   * @param {?} totalToScroll\r\n   * @return {?}\r\n   */\n\n\n  updateTotalToScroll(totalToScroll) {\n    if (this.lastTotalToScroll !== totalToScroll) {\n      this.lastTotalToScroll = this.totalToScroll;\n      this.totalToScroll = totalToScroll;\n    }\n  }\n  /**\r\n   * @param {?} scrolledUntilNow\r\n   * @param {?} totalToScroll\r\n   * @return {?}\r\n   */\n\n\n  updateScroll(scrolledUntilNow, totalToScroll) {\n    this.updateScrollPosition(scrolledUntilNow);\n    this.updateTotalToScroll(totalToScroll);\n  }\n  /**\r\n   * @param {?} scroll\r\n   * @param {?} isScrollingDown\r\n   * @return {?}\r\n   */\n\n\n  updateTriggeredFlag(scroll, isScrollingDown) {\n    if (isScrollingDown) {\n      this.triggered.down = scroll;\n    } else {\n      this.triggered.up = scroll;\n    }\n  }\n  /**\r\n   * @param {?} totalToScroll\r\n   * @param {?} isScrollingDown\r\n   * @return {?}\r\n   */\n\n\n  isTriggeredScroll(totalToScroll, isScrollingDown) {\n    return isScrollingDown ? this.triggered.down === totalToScroll : this.triggered.up === totalToScroll;\n  }\n\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/scroll-register.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @param {?} config\r\n * @return {?}\r\n */\n\n\nfunction createScroller(config) {\n  const {\n    scrollContainer,\n    scrollWindow,\n    element,\n    fromRoot\n  } = config;\n  /** @type {?} */\n\n  const resolver = createResolver({\n    axis: new AxisResolver(!config.horizontal),\n    windowElement: resolveContainerElement(scrollContainer, scrollWindow, element, fromRoot)\n  });\n  /** @type {?} */\n\n  const scrollState = new ScrollState({\n    totalToScroll: calculatePoints(element, resolver)\n  });\n  /** @type {?} */\n\n  const options = {\n    container: resolver.container,\n    throttle: config.throttle\n  };\n  /** @type {?} */\n\n  const distance = {\n    up: config.upDistance,\n    down: config.downDistance\n  };\n  return attachScrollEvent(options).pipe(mergeMap(\n  /**\r\n  * @return {?}\r\n  */\n  () => of(calculatePoints(element, resolver))), map(\n  /**\r\n  * @param {?} positionStats\r\n  * @return {?}\r\n  */\n  positionStats => toInfiniteScrollParams(scrollState.lastScrollPosition, positionStats, distance)), tap(\n  /**\r\n  * @param {?} __0\r\n  * @return {?}\r\n  */\n  ({\n    stats\n  }) => scrollState.updateScroll(stats.scrolled, stats.totalToScroll)), filter(\n  /**\r\n  * @param {?} __0\r\n  * @return {?}\r\n  */\n  ({\n    fire,\n    scrollDown,\n    stats: {\n      totalToScroll\n    }\n  }) => shouldTriggerEvents(config.alwaysCallback, fire, scrollState.isTriggeredScroll(totalToScroll, scrollDown))), tap(\n  /**\r\n  * @param {?} __0\r\n  * @return {?}\r\n  */\n  ({\n    scrollDown,\n    stats: {\n      totalToScroll\n    }\n  }) => {\n    scrollState.updateTriggeredFlag(totalToScroll, scrollDown);\n  }), map(toInfiniteScrollAction));\n}\n/**\r\n * @param {?} options\r\n * @return {?}\r\n */\n\n\nfunction attachScrollEvent(options) {\n  /** @type {?} */\n  let obs = fromEvent(options.container, 'scroll'); // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\n  // Let's avoid calling the function unless needed.\n  // Replacing with throttleTime seems to solve the problem\n  // See https://github.com/orizens/ngx-infinite-scroll/issues/198\n\n  if (options.throttle) {\n    obs = obs.pipe(throttleTime(options.throttle));\n  }\n\n  return obs;\n}\n/**\r\n * @param {?} lastScrollPosition\r\n * @param {?} stats\r\n * @param {?} distance\r\n * @return {?}\r\n */\n\n\nfunction toInfiniteScrollParams(lastScrollPosition, stats, distance) {\n  const {\n    scrollDown,\n    fire\n  } = getScrollStats(lastScrollPosition, stats, distance);\n  return {\n    scrollDown,\n    fire,\n    stats\n  };\n}\n/** @type {?} */\n\n\nconst InfiniteScrollActions = {\n  DOWN: '[NGX_ISE] DOWN',\n  UP: '[NGX_ISE] UP'\n};\n/**\r\n * @param {?} response\r\n * @return {?}\r\n */\n\nfunction toInfiniteScrollAction(response) {\n  const {\n    scrollDown,\n    stats: {\n      scrolled: currentScrollPosition\n    }\n  } = response;\n  return {\n    type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\n    payload: {\n      currentScrollPosition\n    }\n  };\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/modules/infinite-scroll.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nclass InfiniteScrollDirective {\n  /**\r\n   * @param {?} element\r\n   * @param {?} zone\r\n   */\n  constructor(element, zone) {\n    this.element = element;\n    this.zone = zone;\n    this.scrolled = new EventEmitter();\n    this.scrolledUp = new EventEmitter();\n    this.infiniteScrollDistance = 2;\n    this.infiniteScrollUpDistance = 1.5;\n    this.infiniteScrollThrottle = 150;\n    this.infiniteScrollDisabled = false;\n    this.infiniteScrollContainer = null;\n    this.scrollWindow = true;\n    this.immediateCheck = false;\n    this.horizontal = false;\n    this.alwaysCallback = false;\n    this.fromRoot = false;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  ngAfterViewInit() {\n    if (!this.infiniteScrollDisabled) {\n      this.setup();\n    }\n  }\n  /**\r\n   * @param {?} __0\r\n   * @return {?}\r\n   */\n\n\n  ngOnChanges({\n    infiniteScrollContainer,\n    infiniteScrollDisabled,\n    infiniteScrollDistance\n  }) {\n    /** @type {?} */\n    const containerChanged = inputPropChanged(infiniteScrollContainer);\n    /** @type {?} */\n\n    const disabledChanged = inputPropChanged(infiniteScrollDisabled);\n    /** @type {?} */\n\n    const distanceChanged = inputPropChanged(infiniteScrollDistance);\n    /** @type {?} */\n\n    const shouldSetup = !disabledChanged && !this.infiniteScrollDisabled || disabledChanged && !infiniteScrollDisabled.currentValue || distanceChanged;\n\n    if (containerChanged || disabledChanged || distanceChanged) {\n      this.destroyScroller();\n\n      if (shouldSetup) {\n        this.setup();\n      }\n    }\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  setup() {\n    if (hasWindowDefined()) {\n      this.zone.runOutsideAngular(\n      /**\r\n      * @return {?}\r\n      */\n      () => {\n        this.disposeScroller = createScroller({\n          fromRoot: this.fromRoot,\n          alwaysCallback: this.alwaysCallback,\n          disable: this.infiniteScrollDisabled,\n          downDistance: this.infiniteScrollDistance,\n          element: this.element,\n          horizontal: this.horizontal,\n          scrollContainer: this.infiniteScrollContainer,\n          scrollWindow: this.scrollWindow,\n          throttle: this.infiniteScrollThrottle,\n          upDistance: this.infiniteScrollUpDistance\n        }).subscribe(\n        /**\r\n        * @param {?} payload\r\n        * @return {?}\r\n        */\n        payload => this.zone.run(\n        /**\r\n        * @return {?}\r\n        */\n        () => this.handleOnScroll(payload)));\n      });\n    }\n  }\n  /**\r\n   * @param {?} __0\r\n   * @return {?}\r\n   */\n\n\n  handleOnScroll({\n    type,\n    payload\n  }) {\n    switch (type) {\n      case InfiniteScrollActions.DOWN:\n        return this.scrolled.emit(payload);\n\n      case InfiniteScrollActions.UP:\n        return this.scrolledUp.emit(payload);\n\n      default:\n        return;\n    }\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  ngOnDestroy() {\n    this.destroyScroller();\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  destroyScroller() {\n    if (this.disposeScroller) {\n      this.disposeScroller.unsubscribe();\n    }\n  }\n\n}\n\nInfiniteScrollDirective.Éµfac = function InfiniteScrollDirective_Factory(t) {\n  return new (t || InfiniteScrollDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nInfiniteScrollDirective.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: InfiniteScrollDirective,\n  selectors: [[\"\", \"infiniteScroll\", \"\"], [\"\", \"infinite-scroll\", \"\"], [\"\", \"data-infinite-scroll\", \"\"]],\n  inputs: {\n    infiniteScrollDistance: \"infiniteScrollDistance\",\n    infiniteScrollUpDistance: \"infiniteScrollUpDistance\",\n    infiniteScrollThrottle: \"infiniteScrollThrottle\",\n    infiniteScrollDisabled: \"infiniteScrollDisabled\",\n    infiniteScrollContainer: \"infiniteScrollContainer\",\n    scrollWindow: \"scrollWindow\",\n    immediateCheck: \"immediateCheck\",\n    horizontal: \"horizontal\",\n    alwaysCallback: \"alwaysCallback\",\n    fromRoot: \"fromRoot\"\n  },\n  outputs: {\n    scrolled: \"scrolled\",\n    scrolledUp: \"scrolledUp\"\n  },\n  features: [Éµngcc0.ÉµÉµNgOnChangesFeature]\n});\n/** @nocollapse */\n\nInfiniteScrollDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}];\n\nInfiniteScrollDirective.propDecorators = {\n  scrolled: [{\n    type: Output\n  }],\n  scrolledUp: [{\n    type: Output\n  }],\n  infiniteScrollDistance: [{\n    type: Input\n  }],\n  infiniteScrollUpDistance: [{\n    type: Input\n  }],\n  infiniteScrollThrottle: [{\n    type: Input\n  }],\n  infiniteScrollDisabled: [{\n    type: Input\n  }],\n  infiniteScrollContainer: [{\n    type: Input\n  }],\n  scrollWindow: [{\n    type: Input\n  }],\n  immediateCheck: [{\n    type: Input\n  }],\n  horizontal: [{\n    type: Input\n  }],\n  alwaysCallback: [{\n    type: Input\n  }],\n  fromRoot: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(InfiniteScrollDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    scrolled: [{\n      type: Output\n    }],\n    scrolledUp: [{\n      type: Output\n    }],\n    infiniteScrollDistance: [{\n      type: Input\n    }],\n    infiniteScrollUpDistance: [{\n      type: Input\n    }],\n    infiniteScrollThrottle: [{\n      type: Input\n    }],\n    infiniteScrollDisabled: [{\n      type: Input\n    }],\n    infiniteScrollContainer: [{\n      type: Input\n    }],\n    scrollWindow: [{\n      type: Input\n    }],\n    immediateCheck: [{\n      type: Input\n    }],\n    horizontal: [{\n      type: Input\n    }],\n    alwaysCallback: [{\n      type: Input\n    }],\n    fromRoot: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/modules/ngx-infinite-scroll.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nclass InfiniteScrollModule {}\n\nInfiniteScrollModule.Éµfac = function InfiniteScrollModule_Factory(t) {\n  return new (t || InfiniteScrollModule)();\n};\n\nInfiniteScrollModule.Éµmod = /*@__PURE__*/Éµngcc0.ÉµÉµdefineNgModule({\n  type: InfiniteScrollModule\n});\nInfiniteScrollModule.Éµinj = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(InfiniteScrollModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [InfiniteScrollDirective],\n      exports: [InfiniteScrollDirective],\n      imports: [],\n      providers: []\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(InfiniteScrollModule, {\n    declarations: [InfiniteScrollDirective],\n    exports: [InfiniteScrollDirective]\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/ngx-infinite-scroll.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public-api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * Angular library starter.\r\n * Build an Angular library compatible with AoT compilation & Tree shaking.\r\n * Written by Roberto Simonetti.\r\n * MIT license.\r\n * https://github.com/robisim74/angular-library-starter\r\n */\n\n/**\r\n * Entry point for all public APIs of the package.\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: ngx-infinite-scroll.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { InfiniteScrollDirective, InfiniteScrollModule };","map":{"version":3,"names":["Directive","ElementRef","EventEmitter","Input","NgModule","NgZone","Output","fromEvent","of","filter","map","mergeMap","tap","throttleTime","Éµngcc0","resolveContainerElement","selector","scrollWindow","defaultElement","fromRoot","hasWindow","window","document","documentElement","container","containerIsString","findElement","nativeElement","Error","customRoot","rootEl","querySelector","inputPropChanged","prop","firstChange","hasWindowDefined","VerticalProps","clientHeight","offsetHeight","scrollHeight","pageYOffset","offsetTop","scrollTop","top","HorizontalProps","AxisResolver","constructor","vertical","propsMap","clientHeightKey","offsetHeightKey","scrollHeightKey","pageYOffsetKey","offsetTopKey","scrollTopKey","topKey","shouldTriggerEvents","alwaysCallback","shouldFireScrollEvent","isTriggeredCurrentTotal","createResolver","windowElement","axis","createResolverWithContainer","isWindow","isElementWindow","resolver","Object","assign","some","obj","prototype","toString","call","includes","getDocumentElement","isContainerWindow","calculatePoints","element","height","extractHeightForElement","calculatePointsForWindow","calculatePointsForElement","extractHeightPropKeys","scrolled","getElementPageYOffset","nativeElementHeight","getElementHeight","totalToScroll","getElementOffsetTop","elem","isNaN","docElem","getBoundingClientRect","ownerDocument","defaultView","distance","scrollingDown","remaining","containerBreakpoint","scrolledUntilNow","down","totalHiddenContentHeight","up","shouldFireEvent","isScrollingDownwards","lastScrollPosition","getScrollStats","scrollDown","fire","ScrollState","lastTotalToScroll","triggered","updateScrollPosition","position","updateTotalToScroll","updateScroll","updateTriggeredFlag","scroll","isScrollingDown","isTriggeredScroll","createScroller","config","scrollContainer","horizontal","scrollState","options","throttle","upDistance","downDistance","attachScrollEvent","pipe","positionStats","toInfiniteScrollParams","stats","toInfiniteScrollAction","obs","InfiniteScrollActions","DOWN","UP","response","currentScrollPosition","type","payload","InfiniteScrollDirective","zone","scrolledUp","infiniteScrollDistance","infiniteScrollUpDistance","infiniteScrollThrottle","infiniteScrollDisabled","infiniteScrollContainer","immediateCheck","ngAfterViewInit","setup","ngOnChanges","containerChanged","disabledChanged","distanceChanged","shouldSetup","currentValue","destroyScroller","runOutsideAngular","disposeScroller","disable","subscribe","run","handleOnScroll","emit","ngOnDestroy","unsubscribe","Éµfac","InfiniteScrollDirective_Factory","t","ÉµÉµdirectiveInject","Éµdir","ÉµÉµdefineDirective","selectors","inputs","outputs","features","ÉµÉµNgOnChangesFeature","ctorParameters","propDecorators","ngDevMode","ÉµsetClassMetadata","args","InfiniteScrollModule","InfiniteScrollModule_Factory","Éµmod","ÉµÉµdefineNgModule","Éµinj","ÉµÉµdefineInjector","declarations","exports","imports","providers","ngJitMode","ÉµÉµsetNgModuleScope"],"sources":["C:/Users/guilh/OneDrive/Documentos/site-portifolio-angular/node_modules/ngx-infinite-scroll/__ivy_ngcc__/modules/ngx-infinite-scroll.js"],"sourcesContent":["import { Directive, ElementRef, EventEmitter, Input, NgModule, NgZone, Output } from '@angular/core';\r\nimport { fromEvent, of } from 'rxjs';\r\nimport { filter, map, mergeMap, tap, throttleTime } from 'rxjs/operators';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/ngx-ins-utils.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?} selector\r\n * @param {?} scrollWindow\r\n * @param {?} defaultElement\r\n * @param {?} fromRoot\r\n * @return {?}\r\n */\r\nimport * as Éµngcc0 from '@angular/core';\r\nfunction resolveContainerElement(selector, scrollWindow, defaultElement, fromRoot) {\r\n    /** @type {?} */\r\n    const hasWindow = window && !!window.document && window.document.documentElement;\r\n    /** @type {?} */\r\n    let container = hasWindow && scrollWindow ? window : defaultElement;\r\n    if (selector) {\r\n        /** @type {?} */\r\n        const containerIsString = selector && hasWindow && typeof selector === 'string';\r\n        container = containerIsString\r\n            ? findElement(selector, defaultElement.nativeElement, fromRoot)\r\n            : selector;\r\n        if (!container) {\r\n            throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\r\n        }\r\n    }\r\n    return container;\r\n}\r\n/**\r\n * @param {?} selector\r\n * @param {?} customRoot\r\n * @param {?} fromRoot\r\n * @return {?}\r\n */\r\nfunction findElement(selector, customRoot, fromRoot) {\r\n    /** @type {?} */\r\n    const rootEl = fromRoot ? window.document : customRoot;\r\n    return rootEl.querySelector(selector);\r\n}\r\n/**\r\n * @param {?} prop\r\n * @return {?}\r\n */\r\nfunction inputPropChanged(prop) {\r\n    return prop && !prop.firstChange;\r\n}\r\n/**\r\n * @return {?}\r\n */\r\nfunction hasWindowDefined() {\r\n    return typeof window !== 'undefined';\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/axis-resolver.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst VerticalProps = {\r\n    clientHeight: \"clientHeight\",\r\n    offsetHeight: \"offsetHeight\",\r\n    scrollHeight: \"scrollHeight\",\r\n    pageYOffset: \"pageYOffset\",\r\n    offsetTop: \"offsetTop\",\r\n    scrollTop: \"scrollTop\",\r\n    top: \"top\"\r\n};\r\n/** @type {?} */\r\nconst HorizontalProps = {\r\n    clientHeight: \"clientWidth\",\r\n    offsetHeight: \"offsetWidth\",\r\n    scrollHeight: \"scrollWidth\",\r\n    pageYOffset: \"pageXOffset\",\r\n    offsetTop: \"offsetLeft\",\r\n    scrollTop: \"scrollLeft\",\r\n    top: \"left\"\r\n};\r\nclass AxisResolver {\r\n    /**\r\n     * @param {?=} vertical\r\n     */\r\n    constructor(vertical = true) {\r\n        this.vertical = vertical;\r\n        this.propsMap = vertical ? VerticalProps : HorizontalProps;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    clientHeightKey() {\r\n        return this.propsMap.clientHeight;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    offsetHeightKey() {\r\n        return this.propsMap.offsetHeight;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    scrollHeightKey() {\r\n        return this.propsMap.scrollHeight;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    pageYOffsetKey() {\r\n        return this.propsMap.pageYOffset;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    offsetTopKey() {\r\n        return this.propsMap.offsetTop;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    scrollTopKey() {\r\n        return this.propsMap.scrollTop;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    topKey() {\r\n        return this.propsMap.top;\r\n    }\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/event-trigger.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\n\r\n/**\r\n * @record\r\n */\r\n\r\n/**\r\n * @record\r\n */\r\n\r\n/**\r\n * @record\r\n */\r\n\r\n/**\r\n * @param {?} alwaysCallback\r\n * @param {?} shouldFireScrollEvent\r\n * @param {?} isTriggeredCurrentTotal\r\n * @return {?}\r\n */\r\nfunction shouldTriggerEvents(alwaysCallback, shouldFireScrollEvent, isTriggeredCurrentTotal) {\r\n    if (alwaysCallback && shouldFireScrollEvent) {\r\n        return true;\r\n    }\r\n    if (!isTriggeredCurrentTotal && shouldFireScrollEvent) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/position-resolver.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?} __0\r\n * @return {?}\r\n */\r\nfunction createResolver({ windowElement, axis }) {\r\n    return createResolverWithContainer({ axis, isWindow: isElementWindow(windowElement) }, windowElement);\r\n}\r\n/**\r\n * @param {?} resolver\r\n * @param {?} windowElement\r\n * @return {?}\r\n */\r\nfunction createResolverWithContainer(resolver, windowElement) {\r\n    /** @type {?} */\r\n    const container = resolver.isWindow || (windowElement && !windowElement.nativeElement)\r\n        ? windowElement\r\n        : windowElement.nativeElement;\r\n    return Object.assign(Object.assign({}, resolver), { container });\r\n}\r\n/**\r\n * @param {?} windowElement\r\n * @return {?}\r\n */\r\nfunction isElementWindow(windowElement) {\r\n    /** @type {?} */\r\n    const isWindow = ['Window', 'global'].some((/**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    (obj) => Object.prototype.toString.call(windowElement).includes(obj)));\r\n    return isWindow;\r\n}\r\n/**\r\n * @param {?} isContainerWindow\r\n * @param {?} windowElement\r\n * @return {?}\r\n */\r\nfunction getDocumentElement(isContainerWindow, windowElement) {\r\n    return isContainerWindow ? windowElement.document.documentElement : null;\r\n}\r\n/**\r\n * @param {?} element\r\n * @param {?} resolver\r\n * @return {?}\r\n */\r\nfunction calculatePoints(element, resolver) {\r\n    /** @type {?} */\r\n    const height = extractHeightForElement(resolver);\r\n    return resolver.isWindow\r\n        ? calculatePointsForWindow(height, element, resolver)\r\n        : calculatePointsForElement(height, element, resolver);\r\n}\r\n/**\r\n * @param {?} height\r\n * @param {?} element\r\n * @param {?} resolver\r\n * @return {?}\r\n */\r\nfunction calculatePointsForWindow(height, element, resolver) {\r\n    const { axis, container, isWindow } = resolver;\r\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\r\n    // scrolled until now / current y point\r\n    /** @type {?} */\r\n    const scrolled = height +\r\n        getElementPageYOffset(getDocumentElement(isWindow, container), axis, isWindow);\r\n    // total height / most bottom y point\r\n    /** @type {?} */\r\n    const nativeElementHeight = getElementHeight(element.nativeElement, isWindow, offsetHeightKey, clientHeightKey);\r\n    /** @type {?} */\r\n    const totalToScroll = getElementOffsetTop(element.nativeElement, axis, isWindow) +\r\n        nativeElementHeight;\r\n    return { height, scrolled, totalToScroll, isWindow };\r\n}\r\n/**\r\n * @param {?} height\r\n * @param {?} element\r\n * @param {?} resolver\r\n * @return {?}\r\n */\r\nfunction calculatePointsForElement(height, element, resolver) {\r\n    const { axis, container } = resolver;\r\n    // perhaps use container.offsetTop instead of 'scrollTop'\r\n    /** @type {?} */\r\n    const scrolled = container[axis.scrollTopKey()];\r\n    /** @type {?} */\r\n    const totalToScroll = container[axis.scrollHeightKey()];\r\n    return { height, scrolled, totalToScroll, isWindow: false };\r\n}\r\n/**\r\n * @param {?} axis\r\n * @return {?}\r\n */\r\nfunction extractHeightPropKeys(axis) {\r\n    return {\r\n        offsetHeightKey: axis.offsetHeightKey(),\r\n        clientHeightKey: axis.clientHeightKey()\r\n    };\r\n}\r\n/**\r\n * @param {?} __0\r\n * @return {?}\r\n */\r\nfunction extractHeightForElement({ container, isWindow, axis }) {\r\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\r\n    return getElementHeight(container, isWindow, offsetHeightKey, clientHeightKey);\r\n}\r\n/**\r\n * @param {?} elem\r\n * @param {?} isWindow\r\n * @param {?} offsetHeightKey\r\n * @param {?} clientHeightKey\r\n * @return {?}\r\n */\r\nfunction getElementHeight(elem, isWindow, offsetHeightKey, clientHeightKey) {\r\n    if (isNaN(elem[offsetHeightKey])) {\r\n        /** @type {?} */\r\n        const docElem = getDocumentElement(isWindow, elem);\r\n        return docElem ? docElem[clientHeightKey] : 0;\r\n    }\r\n    else {\r\n        return elem[offsetHeightKey];\r\n    }\r\n}\r\n/**\r\n * @param {?} elem\r\n * @param {?} axis\r\n * @param {?} isWindow\r\n * @return {?}\r\n */\r\nfunction getElementOffsetTop(elem, axis, isWindow) {\r\n    /** @type {?} */\r\n    const topKey = axis.topKey();\r\n    // elem = elem.nativeElement;\r\n    if (!elem.getBoundingClientRect) {\r\n        // || elem.css('none')) {\r\n        return;\r\n    }\r\n    return (elem.getBoundingClientRect()[topKey] +\r\n        getElementPageYOffset(elem, axis, isWindow));\r\n}\r\n/**\r\n * @param {?} elem\r\n * @param {?} axis\r\n * @param {?} isWindow\r\n * @return {?}\r\n */\r\nfunction getElementPageYOffset(elem, axis, isWindow) {\r\n    /** @type {?} */\r\n    const pageYOffset = axis.pageYOffsetKey();\r\n    /** @type {?} */\r\n    const scrollTop = axis.scrollTopKey();\r\n    /** @type {?} */\r\n    const offsetTop = axis.offsetTopKey();\r\n    if (isNaN(window.pageYOffset)) {\r\n        return getDocumentElement(isWindow, elem)[scrollTop];\r\n    }\r\n    else if (elem.ownerDocument) {\r\n        return elem.ownerDocument.defaultView[pageYOffset];\r\n    }\r\n    else {\r\n        return elem[offsetTop];\r\n    }\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/scroll-resolver.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?} container\r\n * @param {?} distance\r\n * @param {?} scrollingDown\r\n * @return {?}\r\n */\r\nfunction shouldFireScrollEvent(container, distance, scrollingDown) {\r\n    /** @type {?} */\r\n    let remaining;\r\n    /** @type {?} */\r\n    let containerBreakpoint;\r\n    if (container.totalToScroll <= 0) {\r\n        return false;\r\n    }\r\n    /** @type {?} */\r\n    const scrolledUntilNow = container.isWindow ? container.scrolled : container.height + container.scrolled;\r\n    if (scrollingDown) {\r\n        remaining =\r\n            (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\r\n        containerBreakpoint = distance.down / 10;\r\n    }\r\n    else {\r\n        /** @type {?} */\r\n        const totalHiddenContentHeight = container.scrolled + (container.totalToScroll - scrolledUntilNow);\r\n        remaining = container.scrolled / totalHiddenContentHeight;\r\n        containerBreakpoint = distance.up / 10;\r\n    }\r\n    /** @type {?} */\r\n    const shouldFireEvent = remaining <= containerBreakpoint;\r\n    return shouldFireEvent;\r\n}\r\n/**\r\n * @param {?} lastScrollPosition\r\n * @param {?} container\r\n * @return {?}\r\n */\r\nfunction isScrollingDownwards(lastScrollPosition, container) {\r\n    return lastScrollPosition < container.scrolled;\r\n}\r\n/**\r\n * @param {?} lastScrollPosition\r\n * @param {?} container\r\n * @param {?} distance\r\n * @return {?}\r\n */\r\nfunction getScrollStats(lastScrollPosition, container, distance) {\r\n    /** @type {?} */\r\n    const scrollDown = isScrollingDownwards(lastScrollPosition, container);\r\n    return {\r\n        fire: shouldFireScrollEvent(container, distance, scrollDown),\r\n        scrollDown\r\n    };\r\n}\r\n/**\r\n * @param {?} position\r\n * @param {?} scrollState\r\n * @return {?}\r\n */\r\n\r\n/**\r\n * @param {?} totalToScroll\r\n * @param {?} scrollState\r\n * @return {?}\r\n */\r\n\r\n/**\r\n * @param {?} scrollState\r\n * @return {?}\r\n */\r\n\r\n/**\r\n * @param {?} scroll\r\n * @param {?} scrollState\r\n * @param {?} triggered\r\n * @param {?} isScrollingDown\r\n * @return {?}\r\n */\r\n\r\n/**\r\n * @param {?} totalToScroll\r\n * @param {?} scrollState\r\n * @param {?} isScrollingDown\r\n * @return {?}\r\n */\r\n\r\n/**\r\n * @param {?} scrollState\r\n * @param {?} scrolledUntilNow\r\n * @param {?} totalToScroll\r\n * @return {?}\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/scroll-state.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass ScrollState {\r\n    /**\r\n     * @param {?} __0\r\n     */\r\n    constructor({ totalToScroll }) {\r\n        this.lastScrollPosition = 0;\r\n        this.lastTotalToScroll = 0;\r\n        this.totalToScroll = 0;\r\n        this.triggered = {\r\n            down: 0,\r\n            up: 0\r\n        };\r\n        this.totalToScroll = totalToScroll;\r\n    }\r\n    /**\r\n     * @param {?} position\r\n     * @return {?}\r\n     */\r\n    updateScrollPosition(position) {\r\n        return (this.lastScrollPosition = position);\r\n    }\r\n    /**\r\n     * @param {?} totalToScroll\r\n     * @return {?}\r\n     */\r\n    updateTotalToScroll(totalToScroll) {\r\n        if (this.lastTotalToScroll !== totalToScroll) {\r\n            this.lastTotalToScroll = this.totalToScroll;\r\n            this.totalToScroll = totalToScroll;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} scrolledUntilNow\r\n     * @param {?} totalToScroll\r\n     * @return {?}\r\n     */\r\n    updateScroll(scrolledUntilNow, totalToScroll) {\r\n        this.updateScrollPosition(scrolledUntilNow);\r\n        this.updateTotalToScroll(totalToScroll);\r\n    }\r\n    /**\r\n     * @param {?} scroll\r\n     * @param {?} isScrollingDown\r\n     * @return {?}\r\n     */\r\n    updateTriggeredFlag(scroll, isScrollingDown) {\r\n        if (isScrollingDown) {\r\n            this.triggered.down = scroll;\r\n        }\r\n        else {\r\n            this.triggered.up = scroll;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} totalToScroll\r\n     * @param {?} isScrollingDown\r\n     * @return {?}\r\n     */\r\n    isTriggeredScroll(totalToScroll, isScrollingDown) {\r\n        return isScrollingDown\r\n            ? this.triggered.down === totalToScroll\r\n            : this.triggered.up === totalToScroll;\r\n    }\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/services/scroll-register.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?} config\r\n * @return {?}\r\n */\r\nfunction createScroller(config) {\r\n    const { scrollContainer, scrollWindow, element, fromRoot } = config;\r\n    /** @type {?} */\r\n    const resolver = createResolver({\r\n        axis: new AxisResolver(!config.horizontal),\r\n        windowElement: resolveContainerElement(scrollContainer, scrollWindow, element, fromRoot)\r\n    });\r\n    /** @type {?} */\r\n    const scrollState = new ScrollState({\r\n        totalToScroll: calculatePoints(element, resolver)\r\n    });\r\n    /** @type {?} */\r\n    const options = {\r\n        container: resolver.container,\r\n        throttle: config.throttle\r\n    };\r\n    /** @type {?} */\r\n    const distance = {\r\n        up: config.upDistance,\r\n        down: config.downDistance\r\n    };\r\n    return attachScrollEvent(options).pipe(mergeMap((/**\r\n     * @return {?}\r\n     */\r\n    () => of(calculatePoints(element, resolver)))), map((/**\r\n     * @param {?} positionStats\r\n     * @return {?}\r\n     */\r\n    (positionStats) => toInfiniteScrollParams(scrollState.lastScrollPosition, positionStats, distance))), tap((/**\r\n     * @param {?} __0\r\n     * @return {?}\r\n     */\r\n    ({ stats }) => scrollState.updateScroll(stats.scrolled, stats.totalToScroll))), filter((/**\r\n     * @param {?} __0\r\n     * @return {?}\r\n     */\r\n    ({ fire, scrollDown, stats: { totalToScroll } }) => shouldTriggerEvents(config.alwaysCallback, fire, scrollState.isTriggeredScroll(totalToScroll, scrollDown)))), tap((/**\r\n     * @param {?} __0\r\n     * @return {?}\r\n     */\r\n    ({ scrollDown, stats: { totalToScroll } }) => {\r\n        scrollState.updateTriggeredFlag(totalToScroll, scrollDown);\r\n    })), map(toInfiniteScrollAction));\r\n}\r\n/**\r\n * @param {?} options\r\n * @return {?}\r\n */\r\nfunction attachScrollEvent(options) {\r\n    /** @type {?} */\r\n    let obs = fromEvent(options.container, 'scroll');\r\n    // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\r\n    // Let's avoid calling the function unless needed.\r\n    // Replacing with throttleTime seems to solve the problem\r\n    // See https://github.com/orizens/ngx-infinite-scroll/issues/198\r\n    if (options.throttle) {\r\n        obs = obs.pipe(throttleTime(options.throttle));\r\n    }\r\n    return obs;\r\n}\r\n/**\r\n * @param {?} lastScrollPosition\r\n * @param {?} stats\r\n * @param {?} distance\r\n * @return {?}\r\n */\r\nfunction toInfiniteScrollParams(lastScrollPosition, stats, distance) {\r\n    const { scrollDown, fire } = getScrollStats(lastScrollPosition, stats, distance);\r\n    return {\r\n        scrollDown,\r\n        fire,\r\n        stats\r\n    };\r\n}\r\n/** @type {?} */\r\nconst InfiniteScrollActions = {\r\n    DOWN: '[NGX_ISE] DOWN',\r\n    UP: '[NGX_ISE] UP'\r\n};\r\n/**\r\n * @param {?} response\r\n * @return {?}\r\n */\r\nfunction toInfiniteScrollAction(response) {\r\n    const { scrollDown, stats: { scrolled: currentScrollPosition } } = response;\r\n    return {\r\n        type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\r\n        payload: {\r\n            currentScrollPosition\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/modules/infinite-scroll.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass InfiniteScrollDirective {\r\n    /**\r\n     * @param {?} element\r\n     * @param {?} zone\r\n     */\r\n    constructor(element, zone) {\r\n        this.element = element;\r\n        this.zone = zone;\r\n        this.scrolled = new EventEmitter();\r\n        this.scrolledUp = new EventEmitter();\r\n        this.infiniteScrollDistance = 2;\r\n        this.infiniteScrollUpDistance = 1.5;\r\n        this.infiniteScrollThrottle = 150;\r\n        this.infiniteScrollDisabled = false;\r\n        this.infiniteScrollContainer = null;\r\n        this.scrollWindow = true;\r\n        this.immediateCheck = false;\r\n        this.horizontal = false;\r\n        this.alwaysCallback = false;\r\n        this.fromRoot = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.infiniteScrollDisabled) {\r\n            this.setup();\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} __0\r\n     * @return {?}\r\n     */\r\n    ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }) {\r\n        /** @type {?} */\r\n        const containerChanged = inputPropChanged(infiniteScrollContainer);\r\n        /** @type {?} */\r\n        const disabledChanged = inputPropChanged(infiniteScrollDisabled);\r\n        /** @type {?} */\r\n        const distanceChanged = inputPropChanged(infiniteScrollDistance);\r\n        /** @type {?} */\r\n        const shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\r\n            (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\r\n        if (containerChanged || disabledChanged || distanceChanged) {\r\n            this.destroyScroller();\r\n            if (shouldSetup) {\r\n                this.setup();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    setup() {\r\n        if (hasWindowDefined()) {\r\n            this.zone.runOutsideAngular((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                this.disposeScroller = createScroller({\r\n                    fromRoot: this.fromRoot,\r\n                    alwaysCallback: this.alwaysCallback,\r\n                    disable: this.infiniteScrollDisabled,\r\n                    downDistance: this.infiniteScrollDistance,\r\n                    element: this.element,\r\n                    horizontal: this.horizontal,\r\n                    scrollContainer: this.infiniteScrollContainer,\r\n                    scrollWindow: this.scrollWindow,\r\n                    throttle: this.infiniteScrollThrottle,\r\n                    upDistance: this.infiniteScrollUpDistance\r\n                }).subscribe((/**\r\n                 * @param {?} payload\r\n                 * @return {?}\r\n                 */\r\n                (payload) => this.zone.run((/**\r\n                 * @return {?}\r\n                 */\r\n                () => this.handleOnScroll(payload)))));\r\n            }));\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} __0\r\n     * @return {?}\r\n     */\r\n    handleOnScroll({ type, payload }) {\r\n        switch (type) {\r\n            case InfiniteScrollActions.DOWN:\r\n                return this.scrolled.emit(payload);\r\n            case InfiniteScrollActions.UP:\r\n                return this.scrolledUp.emit(payload);\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.destroyScroller();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    destroyScroller() {\r\n        if (this.disposeScroller) {\r\n            this.disposeScroller.unsubscribe();\r\n        }\r\n    }\r\n}\r\nInfiniteScrollDirective.Éµfac = function InfiniteScrollDirective_Factory(t) { return new (t || InfiniteScrollDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\r\nInfiniteScrollDirective.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: InfiniteScrollDirective, selectors: [[\"\", \"infiniteScroll\", \"\"], [\"\", \"infinite-scroll\", \"\"], [\"\", \"data-infinite-scroll\", \"\"]], inputs: { infiniteScrollDistance: \"infiniteScrollDistance\", infiniteScrollUpDistance: \"infiniteScrollUpDistance\", infiniteScrollThrottle: \"infiniteScrollThrottle\", infiniteScrollDisabled: \"infiniteScrollDisabled\", infiniteScrollContainer: \"infiniteScrollContainer\", scrollWindow: \"scrollWindow\", immediateCheck: \"immediateCheck\", horizontal: \"horizontal\", alwaysCallback: \"alwaysCallback\", fromRoot: \"fromRoot\" }, outputs: { scrolled: \"scrolled\", scrolledUp: \"scrolledUp\" }, features: [Éµngcc0.ÉµÉµNgOnChangesFeature] });\r\n/** @nocollapse */\r\nInfiniteScrollDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: NgZone }\r\n];\r\nInfiniteScrollDirective.propDecorators = {\r\n    scrolled: [{ type: Output }],\r\n    scrolledUp: [{ type: Output }],\r\n    infiniteScrollDistance: [{ type: Input }],\r\n    infiniteScrollUpDistance: [{ type: Input }],\r\n    infiniteScrollThrottle: [{ type: Input }],\r\n    infiniteScrollDisabled: [{ type: Input }],\r\n    infiniteScrollContainer: [{ type: Input }],\r\n    scrollWindow: [{ type: Input }],\r\n    immediateCheck: [{ type: Input }],\r\n    horizontal: [{ type: Input }],\r\n    alwaysCallback: [{ type: Input }],\r\n    fromRoot: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(InfiniteScrollDirective, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\r\n            }]\r\n    }], function () { return [{ type: Éµngcc0.ElementRef }, { type: Éµngcc0.NgZone }]; }, { scrolled: [{\r\n            type: Output\r\n        }], scrolledUp: [{\r\n            type: Output\r\n        }], infiniteScrollDistance: [{\r\n            type: Input\r\n        }], infiniteScrollUpDistance: [{\r\n            type: Input\r\n        }], infiniteScrollThrottle: [{\r\n            type: Input\r\n        }], infiniteScrollDisabled: [{\r\n            type: Input\r\n        }], infiniteScrollContainer: [{\r\n            type: Input\r\n        }], scrollWindow: [{\r\n            type: Input\r\n        }], immediateCheck: [{\r\n            type: Input\r\n        }], horizontal: [{\r\n            type: Input\r\n        }], alwaysCallback: [{\r\n            type: Input\r\n        }], fromRoot: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/modules/ngx-infinite-scroll.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass InfiniteScrollModule {\r\n}\r\nInfiniteScrollModule.Éµfac = function InfiniteScrollModule_Factory(t) { return new (t || InfiniteScrollModule)(); };\r\nInfiniteScrollModule.Éµmod = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineNgModule({ type: InfiniteScrollModule });\r\nInfiniteScrollModule.Éµinj = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(InfiniteScrollModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [InfiniteScrollDirective],\r\n                exports: [InfiniteScrollDirective],\r\n                imports: [],\r\n                providers: []\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(InfiniteScrollModule, { declarations: [InfiniteScrollDirective], exports: [InfiniteScrollDirective] }); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/ngx-infinite-scroll.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public-api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Angular library starter.\r\n * Build an Angular library compatible with AoT compilation & Tree shaking.\r\n * Written by Roberto Simonetti.\r\n * MIT license.\r\n * https://github.com/robisim74/angular-library-starter\r\n */\r\n/**\r\n * Entry point for all public APIs of the package.\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: ngx-infinite-scroll.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { InfiniteScrollDirective, InfiniteScrollModule };\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}